var searchIndex = new Map(JSON.parse('[["kani",{"t":"GKYFPPPEYPPFEHMNNNNHCQHHEENNNNNNNNNHCHQXNNNNNNNCQQNNNCOQQQQXCXNHXXOQQXXCXCQXEOXXNNNNNNNNNNXCEXXXXXPPFFGKHHNNNNNNNNNNNNNNMNNHNNNNNNNNNHKMHHHHHFNNNNNNNNNNHHHH","n":["AllocationStatus","Arbitrary","","ArbitraryPointer","Dangling","DeadObject","InBounds","Invariant","","Null","OutOfBounds","PointerGenerator","RoundRobin","any","","","any_alloc_status","any_array","any_in_bounds","any_where","arbitrary","arbitrary_tuple","assert","assume","block_on","block_on_with_spawn","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","concrete_playback_run","contracts","cover","","ensures","eq","fmt","","","from","","","futures","generate_arbitrary","implies","into","","","invariant","is_initialized","kani_intrinsics","kani_lib","kani_mem","kani_mem_init","loop_invariant","mem","modifies","new","pointer_generator","proof","proof_for_contract","ptr","ptr_generator","ptr_generator_fn","recursion","requires","shadow","should_panic","slice","slice_generator","solver","spawn","status","stub","stub_verified","to_owned","try_from","","","try_into","","","type_id","","","unwind","vec","yield_now","ensures","modifies","proof_for_contract","requires","stub_verified","CanAssumeRunning","CannotAssumeRunning","JoinHandle","RoundRobin","SchedulingAssumption","SchedulingStrategy","block_on","block_on_with_spawn","borrow","","","borrow_mut","","","default","from","","","into","","","into_future","pick_task","","poll","spawn","try_from","","","try_into","","","type_id","","","yield_now","Invariant","is_safe","can_dereference","can_read_unaligned","can_write","can_write_unaligned","same_allocation","ShadowMem","borrow","borrow_mut","from","get","into","new","set","try_from","try_into","type_id","any_slice_of_array","any_slice_of_array_mut","any_vec","exact_vec"],"q":[[0,"kani"],[93,"kani::contracts"],[98,"kani::futures"],[134,"kani::invariant"],[136,"kani::mem"],[141,"kani::shadow"],[152,"kani::slice"],[154,"kani::vec"],[156,"kani::arbitrary_ptr"],[157,"core::ops::function"],[158,"alloc::vec"],[159,"core::fmt"],[160,"core::result"],[161,"core::any"],[162,"core::future::future"],[163,"core::marker"],[164,"core::pin"],[165,"core::task::wake"],[166,"core::task::poll"],[167,"kani_macros"],[168,"kani_core"]],"i":"````d00``00```b1h10```````0l3103333`````3103103```103`0```````1```0``````````0``3103103103````````Cd0``````0ChC`21002102101Bn12`321321321``D```````Db000000000````","f":"`````````````{{}cb}{{}b}{{}d}{{{j{fh}}}{{l{c}}}b}{{}{{n{b}}}}1{ecb{{Ad{{j{c}}}{{A`{Ab}}}}}}``{{Ab{j{Af}}}Ah}{AbAh}``{j{{j{c}}}{}}00{{{j{f}}}{{j{fc}}}{}}00{{{j{d}}}d}{{j{j{fc}}}Ah{}}{jAh}{{{Al{{Al{Aj}}}}c}AhAn}`7``{{{j{d}}{j{d}}}Ab}{{{j{h}}{j{fB`}}}Bb}{{{j{{l{c}}}}{j{fB`}}}BbBd}{{{j{d}}{j{fB`}}}Bb}{cc{}}00```{{}c{}}00`````````{{}h}0````````````````{jc{}}{c{{Bf{e}}}{}{}}00{{}{{Bf{c}}}{}}00{jBh}00``````````````{ec{}{{Bj{}{{A`{c}}}}}}{{ce}Ah{{Bj{}{{A`{Ah}}}}Bl}Bn}{j{{j{c}}}{}}00{{{j{f}}}{{j{fc}}}{}}00{{}C`};;;:::{{}}{{{j{fBn}}Cb}{{Cf{CbCd}}}}{{{j{fC`}}Cb}{{Cf{CbCd}}}}{{{Cj{{j{fCh}}}}{j{fCl}}}{{Cn{c}}}{}}{cCh{{Bj{}{{A`{Ah}}}}Bl}}<<<;;;:::{{}{{`{{Bj{}{{A`{Ah}}}}}}}}`{{{j{D`}}}Ab}{{}Ab}0000`:9{cc{}}{{{j{{Db{c}}}}}cDd}{{}c{}}{c{{Db{c}}}Dd}{{{j{f{Db{c}}}}c}AhDd}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{jBh}{{{j{{n{c}}}}}{{j{{Df{c}}}}}{}}{{{j{f{n{c}}}}}{{j{f{Df{c}}}}}{}}{{}{{Al{c}}}b}0","D":"Jl","p":[[10,"Arbitrary",0],[6,"AllocationStatus",0,156],[0,"mut"],[5,"PointerGenerator",0,156],[1,"reference"],[5,"ArbitraryPointer",0,156],[1,"array"],[17,"Output"],[1,"bool"],[10,"FnOnce",157],[1,"str"],[1,"unit"],[1,"u8"],[5,"Vec",158],[10,"Fn",157],[5,"Formatter",159],[8,"Result",159],[10,"Debug",159],[6,"Result",160],[5,"TypeId",161],[10,"Future",162],[10,"Sync",163],[10,"SchedulingStrategy",98],[5,"RoundRobin",98],[1,"usize"],[6,"SchedulingAssumption",98],[1,"tuple"],[5,"JoinHandle",98],[5,"Pin",164],[5,"Context",165],[6,"Poll",166],[10,"Invariant",134],[5,"ShadowMem",141],[10,"Copy",163],[1,"slice"]],"r":[[0,156],[2,167],[3,156],[7,134],[8,167],[11,156],[12,98],[21,168],[24,98],[25,98],[39,167],[48,168],[55,168],[56,168],[57,168],[58,168],[59,167],[61,167],[63,156],[64,167],[65,167],[67,168],[68,168],[69,167],[70,167],[72,167],[74,168],[75,167],[76,98],[78,167],[79,167],[90,167],[92,98],[93,167],[94,167],[95,167],[96,167],[97,167]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEYAGQAAAAAAAgAAAAgAAAANAAAADwABABIAAAAZAAoAJwAAACkAAwAxAAAAOgABAD0AAABEAAEASgABAE0AAABRAAkAXAABAGMAAQBrAAYAeAAAAHoAAQB9AAgAiAAAAI8AAQCWAAIA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[4438]}